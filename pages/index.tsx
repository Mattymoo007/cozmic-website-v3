import type { GetStaticProps, NextPage } from "next"
import Head from "next/head"
import CategoryNav from "~/components/CategoryNav/CategoryNav"
import { IProject, IProjectFields } from "~/types/contentful"
import { contentful } from "~/utils/contentful-api"

import { CSSTransition, TransitionGroup } from "react-transition-group"
import ProjectCard from "~/components/ProjectCard/ProjectCard"
import { useState } from "react"

const categories = [
  "all",
  "product design",
  "graphic design",
  "web design",
  "writing",
]

const Home: NextPage<{ projects: IProjectFields[] }> = ({ projects }) => {
  const [filteredProjects, setFilteredProjects] = useState([...projects])

  const filterProjects = (tag: string) => {
    if (tag === "all") return setFilteredProjects(projects)

    const newArr = projects.filter(project => {
      return project.tags?.some(_tag => _tag === tag)
    })

    setFilteredProjects(newArr)
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container home-page">
        <CategoryNav categories={categories} filterProjects={filterProjects} />

        <section className="masonry-with-columns mt-10">
          <TransitionGroup className="todo-list">
            {filteredProjects.map(project => (
              <CSSTransition
                key={project.title}
                timeout={500}
                classNames="project-card"
              >
                <ProjectCard {...project} />
              </CSSTransition>
            ))}
          </TransitionGroup>
        </section>
      </main>
    </>
  )
}

export const getStaticProps: GetStaticProps = async context => {
  const projectArrId = "1449rrFKe0Ev87UCAjAziH"
  const {
    fields: { items },
  } = await contentful.entry(projectArrId)

  const projects = items.map((item: IProject) => item.fields)

  return {
    props: { projects },
  }
}

export default Home
